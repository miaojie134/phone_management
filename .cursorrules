# GO代码与系统设计规范
1. 注意 请研究我的项目，在代码基础之上，进行代码的优化，不要使用硬编码
2. 当你认为需要优化的时候，请先搜索代码库，如果存在，请使用已有的代码或变量，不要自己实现
3. 请使用最简洁的代码实现功能，不要过度设计，一定要极度简洁
4. 不要假设！不要假设！不要假设！要根据实际情况，进行代码的优化
5. 不要存在大量交叉责任，要明确边界。
6. 不要事件处理混乱！
7. 不要代码结构分散！
8. 不增加不必要的抽象层和接口！
9. 设计代码和处理问题要用奇淫技巧、角度刁钻的角度，不要使用笨办法，用更巧妙和优雅的解决方案

## 1. 代码结构与组织

1. **单一职责原则**
   - 每个文件、函数和结构体应当只负责一个明确的功能
   - 避免创建"超级文件"或"上帝对象"

2. **接口优先设计**
   - 先定义清晰的接口，再实现具体功能
   - 所有服务都应该基于接口，而非具体实现

3. **模块化组织**
   - 按功能域划分目录结构（而非技术层）
   - 每个模块应具有明确边界和职责
   - 模块间通过接口通信，减少实现依赖

## 2. 代码风格
 **简洁性优先**
   - 使用清晰的变量和函数命名
   - 避免不必要的嵌套和复杂条件
   - 使用早期返回模式减少嵌套
